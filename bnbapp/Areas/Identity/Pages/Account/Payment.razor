@page "/Payment/{ordId:int?}"
@using Microsoft.AspNetCore.Identity
@using bnbapp.Models;
@inject bnbapp.IRepository.IOrderRepository OrderRepository;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject AuthenticationStateProvider _authenticationStateProvider
@layout BnBApp
@inject NavigationManager uriHelper;
@using System.Threading;

<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>BnB Coding</title>

    <!-- Custom fonts for this template-->
    <link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
          rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="~/css/sb-admin-2.min.css" rel="stylesheet">

</head>

<body id="page-top">
    @if (isSigned)
    {
        <!-- Page Wrapper -->
        <div id="wrapper">

            <!-- Sidebar -->
            <ul class="navbar-nav bg-gradient-purp sidebar sidebar-dark accordion" id="accordionSidebar">

                <!-- Sidebar - Brand -->
                <a class="sidebar-brand d-flex align-items-center justify-content-center" href="account">
                    <div class="sidebar-brand-icon rotate-n-15">
                        <i class="fas fa-laugh-wink"></i>
                    </div>
                    <div class="sidebar-brand-text mx-3">Account</div>
                </a>

                <!-- Divider -->
                <hr class="sidebar-divider center">

                <!-- Nav Item - Dashboard -->
                <li class="nav-item ">
                    <a class="nav-link" href="account">
 
                        <span class="fw-bold">Profile</span>
                    </a>
                </li>
                @if (isAdmin)
                {
                    <li class="nav-item ">
                        <a class="nav-link" href="administrator">
                            Admin

                        </a>
                    </li>
                }
                @if (isBulk)
                {
                    <li class="nav-item">
                        <a class="nav-link" href="bulkvita">
                            <span> BulkVita </span>

                        </a>
                    </li>
                }
                <!-- Nav Item - Start -->
                <li class="nav-item active">
                    <a class="nav-link" href="start">
 
                        <span>Get Started</span>
                    </a>
                </li>
                <!-- Divider -->
                <hr class="sidebar-divider">

                <!-- Heading -->
                <div class="sidebar-heading">
                    Account Settings
                </div>

                <!-- Nav Item - Edit -->
                <li class="nav-item ">
                    <a class="nav-link" href="edit">

                       

                        <span>Edit Details</span>
                    </a>
                </li>

                <!-- Nav Item - Payment Methods WIP!!!
                <a class="nav-item collapsed" href="methods" data-toggle="collapse" data-target="#collapseTwo"
                   aria-expanded="true" aria-controls="collapseTwo">
                     
                    <span>Payment Methods</span>
                </a>
                -->

                <li class="nav-item ">
                    <a class="nav-link" href="orders">

                         
                        <span>Orders</span>
                    </a>
                </li>
                <li class="nav-item ">
                    <a class="nav-link" href="invoices">


                        <span>Invoices</span>
                    </a>
                </li>
                <li class="nav-item ">
                    <a class="nav-link" href="repwd">

                         
                        <span>Change Password</span>
                    </a>
                </li>
                <li class="nav-item ">
                    <a class="nav-link" href="reemail">

                         
                        <span>Change Email</span>
                    </a>
                </li>
                <li class="nav-item ">
                    <a class="nav-link" href="delaccount">

                         
                        <span>Delete Account</span>
                    </a>
                </li>
                <li class="nav-item ">
                    <a class="nav-link" href="logout">


                        <span>Logout</span>
                    </a>
                </li>
                <!-- Divider -->
                <hr class="sidebar-divider">

                <!-- Heading -->
                <div class="sidebar-heading">
                    Information
                </div>

                <!-- Nav Item - Home -->
                <li class="nav-item ">
                    <a class="nav-link" href="home">

                         
                        <span>Home</span>
                    </a>
                </li>

                <!-- Nav Item - About -->
                <li class="nav-item ">
                    <a class="nav-link" href="about">

                         
                        <span>About BnB</span>
                    </a>
                </li>
                <!-- Nav Item - Team -->
                <li class="nav-item ">
                    <a class="nav-link" href="team">

                         
                        <span>Meet The Team</span>
                    </a>
                </li>
                <!-- Nav Item - FAQs -->
                <li class="nav-item ">
                    <a class="nav-link" href="faq">

                         
                        <span>FAQs</span>
                    </a>
                </li>
                <!-- Divider -->
                <hr class="sidebar-divider d-none d-md-block">



            </ul>
            <!-- End of Sidebar -->
            <!-- Content Wrapper -->
            <div id="content-wrapper" class="d-flex flex-column">

                <!-- Main Content -->
                <div id="content">

                    <!-- Topbar -->
                    <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">



                        <!-- Home- Bnb Coding Tech -->
                        <a class="sidebar-brand d-flex align-items-center justify-content-center" href="home">
                            <div class="sidebar-brand-icon rotate-n-15">
                                <i class="fas fa-laugh-wink"></i>
                            </div>
                            <div class="sidebar-brand-text mx-3">BnBCoding Tech</div>
                        </a>

                        <!-- Topbar Navbar -->
                        <ul class="navbar-nav ml-auto">



                            <!-- Nav Item - BnB logo -->
                            <div class="ms-auto">
                                <img class="float-end img-small4" alt="img-thumbnail" src="images/bnblogo.png" />
                            </div>



                            <div class="topbar-divider d-none d-sm-block"></div>

                            <!-- Nav Item - User Information -->


                            <h6 class="text-gray-600 pt-3">@userID</h6>



                        </ul>

                    </nav>
                    <!-- End of Topbar -->
                    <!-- Begin Page Content -->
                    <div class="container-fluid">

                        <!-- Page Heading -->
                        <div class="d-sm-flex align-items-center justify-content-between mb-4">
                            <h1 class="h3 mb-0 text-gray-800">Payment</h1>
                          
                        </div>

                        <!-- Content Row -->
                        <div class="row">


                            <!-- Content Row -->

                            <div class="row">



                                <div class="card shadow mb-4">
                                    <div class="card-header py-3">
                                        <h5 class="m-0 font-weight-bold text-primary">Invoice For @current.Company</h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="box-inner-2">
                                            <div>
                                                <h6 class="fw-bold">Payment Details</h6>
                                                <p class="dis mb-3">Complete your purchase by providing your payment details</p>
                                            </div>
                                              
                                                <div>
                                                    <p class="dis fw-bold mb-2">Card details</p>
                                                    <p class="alert-danger">@error</p>
                                                    <div class="d-flex align-items-center justify-content-between card-atm border rounded">
      
                                                        
                                                        <input type="text" class="form-control" @bind-value="payment.CardNumber" maxlength=16 placeholder="4444-4444-4444-4444">
                                                        <div class="d-flex w-50">
                                                            <input type="text" class="form-control px-0" @bind-value="payment.CardExpiration" maxlength=5 placeholder="MM/YY">
                                                            <input type="password" maxlength=4 class="form-control px-0" @bind-value="payment.CardCVV" placeholder="CVV">
                                                        </div>
                                                    </div>
                                                    <div class="my-3 cardname">
                                                        <p class="dis fw-bold mb-2">Cardholder name</p>
                                                        <input class="form-control" @bind-value="payment.CardName" type="text">
                                                    </div>
                                                    <div class="address">
                                                        <h6 class="dis fw-bold mb-3">Billing address</h6>
                                                       
                                                        <select class="form-select bg-whiter text-black" @bind="payment.BillingCountry" aria-label="Default select example">
                                                            <option selected Hidden>Please Select A Country</option>
                                                            <option value="India">India</option>
                                                            <option value="Australia">Australia</option>
                                                            <option value="Canada">Canada</option>
                                                            <option value="England">England</option>
                                                            <option value="France">France</option>
                                                            <option value="Germany">Germany</option>
                                                            <option value="Japan">Japan</option>
                                                            <option value="Mexico">Mexico</option>
                                                            <option value="Russia">Russia</option>
                                                            <option value="Spain">Spain</option>
                                                            <option value="Switzerland">Switzerland</option>
                                                            <option value="United Kingdom">United Kingdom</option>
                                                            <option value="United States">United States</option>
                                                            <option value="Afghanistan">Afghanistan</option>
                                                            <option value="Albania">Albania</option>
                                                            <option value="Algeria">Algeria</option>
                                                            <option value="American Samoa">American Samoa</option>
                                                            <option value="Andorra">Andorra</option>
                                                            <option value="Angola">Angola</option>
                                                            <option value="Anguilla (UK)">Anguilla (UK)</option>
                                                            <option value="Antigua and Barbuda">Antigua and Barbuda</option>
                                                            <option value="Argentina">Argentina</option>
                                                            <option value="Armenia">Armenia</option>
                                                            <option value="Aruba (Netherlands)">Aruba (Netherlands)</option>
                                                            <option value="Australia">Australia</option>
                                                            <option value="Austria">Austria</option>
                                                            <option value="Azerbaijan">Azerbaijan</option>
                                                            <option value="Azores (Portugal)">Azores (Portugal)</option>
                                                            <option value="Bahamas">Bahamas</option>
                                                            <option value="Bahrain">Bahrain</option>
                                                            <option value="Balearic Islands (Spain)">Balearic Islands (Spain)</option>
                                                            <option value="Bangladesh">Bangladesh</option>
                                                            <option value="Barbados">Barbados</option>
                                                            <option value="Belarus">Belarus</option>
                                                            <option value="Belgium">Belgium</option>
                                                            <option value="Belize">Belize</option>
                                                            <option value="Benin">Benin</option>
                                                            <option value="Bermuda (UK)">Bermuda (UK)</option>
                                                            <option value="Bhutan">Bhutan</option>
                                                            <option value="Bolivia">Bolivia</option>
                                                            <option value="Bonaire (Netherlands)">Bonaire (Netherlands)</option>
                                                            <option value="Bosnia and Herzegovina">Bosnia and Herzegovina</option>
                                                            <option value="Botswana">Botswana</option>
                                                            <option value="Brazil">Brazil</option>
                                                            <option value="British Virgin Islands (UK)">British Virgin Islands (UK)</option>
                                                            <option value="Brunei Darussalam">Brunei Darussalam</option>
                                                            <option value="Bulgaria">Bulgaria</option>
                                                            <option value="Burkina Faso">Burkina Faso</option>
                                                            <option value="Burundi">Burundi</option>

                                                            <!--List all countries-->
                                                            

                                                        </select>
                                                        <div class="d-flex">
                                                            <input class="form-control zip" type="text" @bind-value="payment.BillingZIP" maxlength=5 placeholder="ZIP">
                                                            <input class="form-control city" type="text" @bind-value="payment.BillingCity" placeholder="City">
                                                            <input class="form-control state" type="text" @bind-value="payment.BillingState"  placeholder="State/Province">
                                                        </div>
                                                        <input class="form-control address" type="text" @bind-value="payment.BillingAddress1" placeholder="Address line 1(required)">
                                                        <input class="form-control address" type="text" @bind-value="payment.BillingAddress2" placeholder="Address line 2(optional)">
                                                        <div class="d-flex flex-column dis">
                                                            
                                                            
                                                            <div class="d-flex align-items-center justify-content-between mb-2">
                                                                <h3 class="fw-bold">Total</h3>
                                                                <h3 class="fw-bold"><span class="fas fa-dollar-sign">$</span>@invoiceAmountInUsdFirst.@centAmt</h3>
                                                            </div>
                                                            <div class="text-center pt-3">
                                                                <button class=" w-100 btn btn-lg btn-primary" @onclick="@(e=>SendToPayment())">Pay</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            
                                        </div>
                                </div>
                            </div>
                            </div>
                            <!-- /.container-fluid -->

                        </div>
                        <!-- End of Main Content -->
                        <!-- Footer -->
                        <footer class="sticky-footer bg-white" id="bottom">
                            <div class="container my-auto text-center">
                                <div class="copyright text-center my-auto">
                                    <span>
                                        Copyright &copy; BnBCoding
                                    </span>
                                </div>
                            </div>
                        </footer>
                        <!-- End of Footer -->
                    </div>
                </div>
                <!-- End of Content Wrapper -->
            </div>
        </div>
        <!-- End of Page Wrapper -->
        <!-- Scroll to Top Button-->
        
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            No Order Found On Current User Signed In. <a href="l" class="alert-link">Login</a>. <a href="r" class="alert-link">Register</a>.
        </div>
    }
</body>

</html>
@code {
    [Parameter]
    public int ordId { get; set; } = 0;
    PaymentClass payment = new PaymentClass();
    Order order = new Order();
    List<Order> orders = new List<Order>();
    DateTime sTime = DateTime.Today;
    DateTime eTime = DateTime.Today;
    string error;
    string error2 = "";
    int invoiceAmount;
    int invoiceAmountInUsdFirst;
    int invoiceAmountInUsdSecond;
    string centAmt;
    Order current;
    //create a private class named Payment with a string for each property in the form
    private class PaymentClass
    {


        public string? CardNumber { get; set; }
        public string? CardName { get; set; }
        public string? CardExpiration { get; set; }
        public string? CardCVV { get; set; }
        public string? BillingAddress1 { get; set; }
        public string? BillingAddress2 { get; set; }
        public string? BillingCity { get; set; }
        public string? BillingCountry { get; set; }
        public string? BillingZIP { get; set; }
        public string? BillingState { get; set; }

    }
    bool er = false;

    private void LoadOrders()
    {
        orders = new List<Order>();
        orders = OrderRepository.Gets();

    }
    private void SendToPayment()
    {
        er = false;
        //make sure all fields are filled out with correct number of characters in each field
        if (payment.BillingAddress1 != null)
        {
            if (payment.BillingAddress1.Length < 5 || payment.BillingAddress1.Length > 50) er = true;
        }
        else er = true;
        if (payment.BillingAddress2 == null) payment.BillingAddress2 = "null";
        else if (payment.BillingAddress2 == "") payment.BillingAddress2 = "null";
        else
        {
            if (payment.BillingAddress2.Length < 5 || payment.BillingAddress2.Length > 50) er = true;
        }
        if (payment.BillingCity != null)
        {
            if (payment.BillingCity.Length < 2 || payment.BillingCity.Length > 50) er = true;
        }
        else er = true;
        if (payment.BillingState != null)
        {
            if (payment.BillingState.Length < 2 || payment.BillingState.Length >50) er = true;
        }
        else er = true;

        if(payment.CardExpiration != null)
        {
            if (payment.CardExpiration.Length != 5 || !payment.CardExpiration.Contains("/")) er = true;
        }
        else er = true;
        if(payment.BillingZIP != null)
        {
            if (payment.BillingZIP.Length != 5) er = true;
        }
        else er = true;
        if(payment.BillingCountry != null)
        {
            if (payment.BillingCountry.Length < 2 || payment.BillingCountry.Length > 50) er = true;
        }
        else er = true;
        if(payment.CardNumber != null)
        {
            if (payment.CardNumber.Length != 16) er = true;
        }
        else er = true;
        if(payment.CardName != null)
        {
            if (payment.CardName.Length < 2 || payment.CardName.Length > 50) er = true;
        }
        else er = true;
        //if card number is not 16 digits, error
        if(payment.CardCVV != null)
        {
            if (payment.CardCVV.Length != 3&&payment.CardCVV.Length !=4) er = true;
        }
        else er = true;
        //if cvv is not 3 digits, error

        if (er) error = "Please Fill Out All Fields, With The Correct Amount Of Characters";
        else
        {

            string[] splitCardExpiration = payment.CardExpiration.Split("/");
            //replace all characters to make sure they are allowed in the
            //send to /api/stripe/checkoutstripe/?cardNumber=payment.CardNumber&expMonth=splitCardExpiration[0]&expYear=splitCardExpiration[1]&cvc=payment.CardCVV&value=invoiceAmount&zip=payment.BillingZip&city=payment.BillingCity&state=payment.BillingState&country=payment.Country&line1=payment.BillingAddress1&line2=payment.BillingAddress2&name=payment.CardName&email=userId&orId=ordId
            //use navigation manager to sent to /api/stripe/checkoutstripe/?cardNumber=payment.CardNumber&expMonth=splitCardExpiration[0]&expYear=splitCardExpiration[1]&cvc=payment.CardCVV&value=invoiceAmount&zip=payment.BillingZip&city=payment.BillingCity&state=payment.BillingState&country=payment.Country&line1=payment.BillingAddress1&line2=payment.BillingAddress2&name=payment.CardName&email=userId&orId=ordId
            uriHelper.NavigateTo($"/api/stripe/checkoutstripe/?cardNumber={payment.CardNumber}&expMonth={splitCardExpiration[0]}&expYear={splitCardExpiration[1]}&cvc={payment.CardCVV}&value={invoiceAmount.ToString()}&zip={payment.BillingZIP}&city={payment.BillingCity}&state={payment.BillingState}&country={payment.BillingCountry}&line1={payment.BillingAddress1}&line2={payment.BillingAddress2}&name={payment.CardName}&email={userID}&orId={ordId}", forceLoad: true);


        }
        //why does user get refreshed


    }
    //make a function that will send to /api/stripe/checkoutstripe/?cardNumber=payment.CardNumber&expMonth=splitCardExpiration[0]&expYear=splitCardExpiration[1]&cvc=payment.CardCVV&value=invoiceAmount&zip=payment.BillingZip&city=payment.BillingCity&state=payment.BillingState&country=payment.Country&line1=payment.BillingAddress1&line2=payment.BillingAddress2&name=payment.CardName&email=userId&orId=ordId

    string userID = "";
    bool isSigned = false;
    bool isBulk = false;
    bool isAdmin = false;
    protected override async Task OnInitializedAsync()
    {


        var user = (await _authenticationStateProvider.GetAuthenticationStateAsync()).User;
        if (user.Identity.IsAuthenticated)
        {
            isSigned = true;
            userID = UserManager.GetUserName(user);
            if (userID == "bnbcoding.tech@gmail.com" || userID == "bnbcoding.technologies@gmail.com" || userID == "beck.vilas@gmail.com" || userID == "andrea.bella0816@gmail.com") isAdmin = true;
            if (userID == "beck.vilas@gmail.com" || userID == "andrea.bella0816@gmail.com" || userID == "bnbcoding.technologies@gmail.com" || userID == "bulk.vita@gmail.com") isBulk = true;


        }
        LoadOrders();
        if (CurrentOrder() != null)
        {
            current = CurrentOrder();
            invoiceAmount = current.TotalDue - current.TotalPayed;
            invoiceAmountInUsdFirst = invoiceAmount / 100;
            //get remander of invoiceAmount / 100 and make it equal to invoiceAmountInUsdSecond
            invoiceAmountInUsdSecond = invoiceAmount % 100;
            centAmt = invoiceAmountInUsdSecond.ToString();
            if (centAmt.Length == 1) centAmt = "0" + centAmt;
            
        }
        else isSigned= false;


    }
    private Order CurrentOrder()
    {

        foreach (Order order in orders)
        {
            if (order.Email == userID)
            {
                if (order.Id == ordId) return order;
            }
        }

        return null;
    }
    
}
